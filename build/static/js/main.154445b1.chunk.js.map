{"version":3,"sources":["services/Persons.js","components/Form.js","components/People.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Form","persons","setPersons","handleNameChange","setStatusMessage","useState","newNumber","setNewNumber","newName","setNewName","value","onChange","e","type","onClick","event","isDuplicate","find","el","name","preventDefault","console","log","window","confirm","personService","number","returnedPerson","temp","filter","person","concat","catch","err","message","messageGood","error","Person","People","newFilter","numbersToShow","toUpperCase","includes","map","key","Notification","className","App","setFilter","statusMessage","useEffect","allPeople","setVal","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.154445b1.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\nconst deletePerson = (id) => {\r\n  //todo\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  deletePerson,\r\n  update,\r\n};\r\n","import React, { useState } from 'react';\r\nimport personService from '../services/Persons';\r\n\r\nconst Form = ({ persons, setPersons, handleNameChange, setStatusMessage }) => {\r\n  const [newNumber, setNewNumber] = useState('');\r\n  const [newName, setNewName] = useState('');\r\n\r\n  const addPerson = (event) => {\r\n    const isDuplicate = persons.find((el) => el.name === newName);\r\n    event.preventDefault();\r\n    if (isDuplicate) {\r\n      // window.alert(`${newName} is already added to phonebook`);\r\n      console.log(isDuplicate);\r\n      const result = window.confirm(\r\n        `${isDuplicate.name} is already added to phonebook, replace the old number with a new one?`\r\n      );\r\n      if (result) {\r\n        personService\r\n          .update(isDuplicate.id, {\r\n            id: isDuplicate.id,\r\n            name: isDuplicate.name,\r\n            number: newNumber,\r\n          })\r\n          .then((returnedPerson) => {\r\n            const newArr = persons.filter(\r\n              (person) => person.id !== isDuplicate.id\r\n            );\r\n            const temp = newArr.concat(returnedPerson);\r\n            setPersons(temp);\r\n            setNewNumber('');\r\n            setNewName('');\r\n          })\r\n          .catch((err) =>\r\n            setStatusMessage([\r\n              {\r\n                message: `Information of ${newName} has already been updated`,\r\n                messageGood: false,\r\n              },\r\n            ])\r\n          );\r\n      }\r\n      //change functionality\r\n    } else {\r\n      //Post Request\r\n      personService\r\n        .create({\r\n          name: newName,\r\n          number: newNumber,\r\n        })\r\n        .then((returnedPerson) => {\r\n          setPersons(persons.concat(returnedPerson));\r\n          setNewNumber('');\r\n          setNewName('');\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response.data.error);\r\n          setStatusMessage([\r\n            { message: `${err.response.data.error}`, messageGood: false },\r\n          ]);\r\n        });\r\n      setStatusMessage([{ message: `Added ${newName}`, messageGood: true }]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <div>\r\n        name:{' '}\r\n        <input\r\n          value={newName}\r\n          onChange={(e) => handleNameChange(e, setNewName)}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        number:{' '}\r\n        <input\r\n          value={newNumber}\r\n          onChange={(e) => handleNameChange(e, setNewNumber)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type='submit' onClick={addPerson}>\r\n          add\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport personService from '../services/Persons';\r\n\r\nconst People = ({ newFilter, persons, setPersons, setStatusMessage }) => {\r\n  const numbersToShow = newFilter\r\n    ? persons.filter((person) =>\r\n        person.name.toUpperCase().includes(newFilter.toUpperCase())\r\n      )\r\n    : persons;\r\n\r\n  return (\r\n    <div>\r\n      {numbersToShow.map((person) => (\r\n        <Person\r\n          key={person.name}\r\n          name={person.name}\r\n          number={person.number}\r\n          id={person.id}\r\n          persons={persons}\r\n          setPersons={setPersons}\r\n          setStatusMessage={setStatusMessage}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Person = ({\r\n  name,\r\n  number,\r\n  id,\r\n  persons,\r\n  setPersons,\r\n  setStatusMessage,\r\n}) => {\r\n  const handleDelete = () => {\r\n    const result = window.confirm(`Delete ${name} ?`);\r\n    if (result) {\r\n      const newArr = () => persons.filter((person) => person.id !== id);\r\n      personService.deletePerson(id).catch((err) =>\r\n        setStatusMessage([\r\n          {\r\n            message: `Information of ${name} has already been removed from server`,\r\n            messageGood: false,\r\n          },\r\n        ])\r\n      );\r\n      setPersons(newArr());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>\r\n        {name} {number}\r\n        <button onClick={handleDelete}>delete</button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React from 'react';\r\nimport '../index.css';\r\nconst Notification = ({ message, messageGood }) => {\r\n  if (message === '') {\r\n    return null;\r\n  }\r\n  console.log(messageGood);\r\n\r\n  return messageGood ? (\r\n    <div className='success'>{message}</div>\r\n  ) : (\r\n    <div className='error'>{message}</div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport People from './components/People';\nimport Notification from './components/Notification';\nimport personService from './services/Persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newFilter, setFilter] = useState('');\n  const [statusMessage, setStatusMessage] = useState([\n    { message: '', messageGood: true },\n  ]);\n\n  //get data from db\n  useEffect(() => {\n    personService.getAll().then((allPeople) => {\n      setPersons(allPeople);\n    });\n  }, []);\n\n  const handleNameChange = (event, setVal) => {\n    setVal(event.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        message={statusMessage[0].message}\n        messageGood={statusMessage[0].messageGood}\n      />\n      <div>\n        filter shown with\n        <input\n          value={newFilter}\n          onChange={(e) => handleNameChange(e, setFilter)}\n        />\n      </div>\n\n      <h2>add a new</h2>\n      <Form\n        persons={persons}\n        setPersons={setPersons}\n        handleNameChange={handleNameChange}\n        setStatusMessage={setStatusMessage}\n      />\n      <h2>Numbers</h2>\n      <People\n        newFilter={newFilter}\n        persons={persons}\n        setPersons={setPersons}\n        setStatusMessage={setStatusMessage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}